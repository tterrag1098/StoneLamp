--- ../src-base/minecraft/net/minecraft/server/management/PlayerManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerManager.java
@@ -1,6 +1,7 @@
 package net.minecraft.server.management;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.network.Packet;
@@ -13,6 +14,9 @@
 import net.minecraft.world.WorldProvider;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.Chunk;
+import net.minecraftforge.common.ForgeModContainer;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.world.ChunkWatchEvent;
 
 public class PlayerManager
 {
@@ -337,6 +341,8 @@
                 this.playersWatchingChunk.remove(par1EntityPlayerMP);
                 par1EntityPlayerMP.loadedChunks.remove(this.chunkLocation);
 
+                MinecraftForge.EVENT_BUS.post(new ChunkWatchEvent.UnWatch(chunkLocation, par1EntityPlayerMP));
+
                 if (this.playersWatchingChunk.isEmpty())
                 {
                     long i = (long)this.chunkLocation.chunkXPos + 2147483647L | (long)this.chunkLocation.chunkZPos + 2147483647L << 32;
@@ -376,7 +382,7 @@
 
             this.flagsYAreasToUpdate |= 1 << (p_151253_2_ >> 4);
 
-            if (this.numberOfTilesToUpdate < 64)
+            //if (this.numberOfTilesToUpdate < 64) //Forge; Cache everything, so always run
             {
                 short short1 = (short)(p_151253_1_ << 12 | p_151253_3_ << 8 | p_151253_2_);
 
@@ -388,6 +394,10 @@
                     }
                 }
 
+                if (numberOfTilesToUpdate == locationOfBlockChange.length)
+                {
+                    locationOfBlockChange = Arrays.copyOf(locationOfBlockChange, locationOfBlockChange.length << 1);
+                }
                 this.locationOfBlockChange[this.numberOfTilesToUpdate++] = short1;
             }
         }
@@ -420,7 +430,7 @@
                     k = this.chunkLocation.chunkZPos * 16 + (this.locationOfBlockChange[0] >> 8 & 15);
                     this.sendToAllPlayersWatchingChunk(new S23PacketBlockChange(i, j, k, PlayerManager.this.theWorldServer));
 
-                    if (PlayerManager.this.theWorldServer.getBlock(i, j, k).hasTileEntity())
+                    if (PlayerManager.this.theWorldServer.getBlock(i, j, k).hasTileEntity(PlayerManager.this.theWorldServer.getBlockMetadata(i, j, k)))
                     {
                         this.sendTileToAllPlayersWatchingChunk(PlayerManager.this.theWorldServer.getTileEntity(i, j, k));
                     }
@@ -429,12 +439,13 @@
                 {
                     int l;
 
-                    if (this.numberOfTilesToUpdate == 64)
+                    if (this.numberOfTilesToUpdate == ForgeModContainer.clumpingThreshold)
                     {
                         i = this.chunkLocation.chunkXPos * 16;
                         j = this.chunkLocation.chunkZPos * 16;
                         this.sendToAllPlayersWatchingChunk(new S21PacketChunkData(PlayerManager.this.theWorldServer.getChunkFromChunkCoords(this.chunkLocation.chunkXPos, this.chunkLocation.chunkZPos), false, this.flagsYAreasToUpdate));
 
+                        /* Forge: Grabs ALL tile entities is costly on a modded server, only send needed ones
                         for (k = 0; k < 16; ++k)
                         {
                             if ((this.flagsYAreasToUpdate & 1 << k) != 0)
@@ -448,18 +459,22 @@
                                 }
                             }
                         }
+                        */
                     }
                     else
                     {
                         this.sendToAllPlayersWatchingChunk(new S22PacketMultiBlockChange(this.numberOfTilesToUpdate, this.locationOfBlockChange, PlayerManager.this.theWorldServer.getChunkFromChunkCoords(this.chunkLocation.chunkXPos, this.chunkLocation.chunkZPos)));
-
+                    }
+                    
+                    { //Forge: Send only the tile entities that are updated, Adding this brace lets us keep the indent and the patch small
+                        WorldServer world = PlayerManager.this.theWorldServer;
                         for (i = 0; i < this.numberOfTilesToUpdate; ++i)
                         {
                             j = this.chunkLocation.chunkXPos * 16 + (this.locationOfBlockChange[i] >> 12 & 15);
                             k = this.locationOfBlockChange[i] & 255;
                             l = this.chunkLocation.chunkZPos * 16 + (this.locationOfBlockChange[i] >> 8 & 15);
 
-                            if (PlayerManager.this.theWorldServer.getBlock(j, k, l).hasTileEntity())
+                            if (world.getBlock(j, k, l).hasTileEntity(world.getBlockMetadata(j, k, l)))
                             {
                                 this.sendTileToAllPlayersWatchingChunk(PlayerManager.this.theWorldServer.getTileEntity(j, k, l));
                             }
