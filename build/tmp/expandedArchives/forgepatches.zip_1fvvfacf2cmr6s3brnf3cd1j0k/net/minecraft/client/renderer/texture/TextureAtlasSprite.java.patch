--- ../src-base/minecraft/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
@@ -8,12 +8,14 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.concurrent.Callable;
+import net.minecraft.client.resources.IResourceManager;
 import net.minecraft.client.resources.data.AnimationFrame;
 import net.minecraft.client.resources.data.AnimationMetadataSection;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.util.IIcon;
 import net.minecraft.util.ReportedException;
+import net.minecraft.util.ResourceLocation;
 
 @SideOnly(Side.CLIENT)
 public class TextureAtlasSprite implements IIcon
@@ -437,4 +439,28 @@
     {
         return "TextureAtlasSprite{name=\'" + this.iconName + '\'' + ", frameCount=" + this.framesTextureData.size() + ", rotated=" + this.rotated + ", x=" + this.originX + ", y=" + this.originY + ", height=" + this.height + ", width=" + this.width + ", u0=" + this.minU + ", u1=" + this.maxU + ", v0=" + this.minV + ", v1=" + this.maxV + '}';
     }
+
+    /**
+     * The result of this function determines is the below 'load' function is called, and the 
+     * default vanilla loading code is bypassed completely.
+     * @param manager
+     * @param location
+     * @return True to use your own custom load code and bypass vanilla loading.
+     */
+    public boolean hasCustomLoader(IResourceManager manager, ResourceLocation location)
+    {
+        return false;
+    }
+    
+    /**
+     * Load the specified resource as this sprite's data.
+     * Returning false from this function will prevent this icon from being stitched onto the master texture.
+     * @param manager Main resource manager
+     * @param location File resource location
+     * @return False to prevent this Icon from being stitched
+     */
+    public boolean load(IResourceManager manager, ResourceLocation location)
+    {
+        return true;
+    }
 }
