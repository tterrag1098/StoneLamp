--- ../src-base/minecraft/net/minecraft/block/BlockFire.java
+++ ../src-work/minecraft/net/minecraft/block/BlockFire.java
@@ -2,7 +2,10 @@
 
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
+import java.util.IdentityHashMap;
+import java.util.Map.Entry;
 import java.util.Random;
+import com.google.common.collect.Maps;
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
 import net.minecraft.client.renderer.texture.IIconRegister;
@@ -12,11 +15,15 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldProviderEnd;
+import net.minecraftforge.common.util.ForgeDirection;
+import static net.minecraftforge.common.util.ForgeDirection.*;
 
 public class BlockFire extends Block
 {
-    private int[] field_149849_a = new int[256];
-    private int[] field_149848_b = new int[256];
+    @Deprecated
+    private int[] field_149849_a = new int[4096];
+    @Deprecated
+    private int[] field_149848_b = new int[4096];
     @SideOnly(Side.CLIENT)
     private IIcon[] field_149850_M;
     private static final String __OBFID = "CL_00000245";
@@ -54,10 +61,10 @@
         Blocks.fire.func_149842_a(getIdFromBlock(Blocks.carpet), 60, 20);
     }
 
+    @Deprecated // Use setFireInfo
     public void func_149842_a(int p_149842_1_, int p_149842_2_, int p_149842_3_)
     {
-        this.field_149849_a[p_149842_1_] = p_149842_2_;
-        this.field_149848_b[p_149842_1_] = p_149842_3_;
+        this.setFireInfo((Block)Block.blockRegistry.getObjectById(p_149842_1_), p_149842_2_, p_149842_3_);
     }
 
     // JAVADOC METHOD $$ func_149668_a
@@ -101,13 +108,8 @@
     {
         if (p_149674_1_.getGameRules().getGameRuleBooleanValue("doFireTick"))
         {
-            boolean flag = p_149674_1_.getBlock(p_149674_2_, p_149674_3_ - 1, p_149674_4_) == Blocks.netherrack;
+            boolean flag = p_149674_1_.getBlock(p_149674_2_, p_149674_3_ - 1, p_149674_4_).isFireSource(p_149674_1_, p_149674_2_, p_149674_3_ - 1, p_149674_4_, UP);
 
-            if (p_149674_1_.provider instanceof WorldProviderEnd && p_149674_1_.getBlock(p_149674_2_, p_149674_3_ - 1, p_149674_4_) == Blocks.bedrock)
-            {
-                flag = true;
-            }
-
             if (!this.canPlaceBlockAt(p_149674_1_, p_149674_2_, p_149674_3_, p_149674_4_))
             {
                 p_149674_1_.setBlockToAir(p_149674_2_, p_149674_3_, p_149674_4_);
@@ -135,7 +137,7 @@
                         p_149674_1_.setBlockToAir(p_149674_2_, p_149674_3_, p_149674_4_);
                     }
                 }
-                else if (!flag && !this.canBlockCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ - 1, p_149674_4_) && l == 15 && p_149674_5_.nextInt(4) == 0)
+                else if (!flag && !this.canCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ - 1, p_149674_4_, UP) && l == 15 && p_149674_5_.nextInt(4) == 0)
                 {
                     p_149674_1_.setBlockToAir(p_149674_2_, p_149674_3_, p_149674_4_);
                 }
@@ -149,12 +151,12 @@
                         b0 = -50;
                     }
 
-                    this.tryCatchFire(p_149674_1_, p_149674_2_ + 1, p_149674_3_, p_149674_4_, 300 + b0, p_149674_5_, l);
-                    this.tryCatchFire(p_149674_1_, p_149674_2_ - 1, p_149674_3_, p_149674_4_, 300 + b0, p_149674_5_, l);
-                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ - 1, p_149674_4_, 250 + b0, p_149674_5_, l);
-                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ + 1, p_149674_4_, 250 + b0, p_149674_5_, l);
-                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_, p_149674_4_ - 1, 300 + b0, p_149674_5_, l);
-                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_, p_149674_4_ + 1, 300 + b0, p_149674_5_, l);
+                    this.tryCatchFire(p_149674_1_, p_149674_2_ + 1, p_149674_3_, p_149674_4_, 300 + b0, p_149674_5_, l, WEST );
+                    this.tryCatchFire(p_149674_1_, p_149674_2_ - 1, p_149674_3_, p_149674_4_, 300 + b0, p_149674_5_, l, EAST );
+                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ - 1, p_149674_4_, 250 + b0, p_149674_5_, l, UP   );
+                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_ + 1, p_149674_4_, 250 + b0, p_149674_5_, l, DOWN );
+                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_, p_149674_4_ - 1, 300 + b0, p_149674_5_, l, SOUTH);
+                    this.tryCatchFire(p_149674_1_, p_149674_2_, p_149674_3_, p_149674_4_ + 1, 300 + b0, p_149674_5_, l, NORTH);
 
                     for (int i1 = p_149674_2_ - 1; i1 <= p_149674_2_ + 1; ++i1)
                     {
@@ -209,10 +211,16 @@
     }
 
     // JAVADOC METHOD $$ func_149841_a
+    @Deprecated
     private void tryCatchFire(World p_149841_1_, int p_149841_2_, int p_149841_3_, int p_149841_4_, int p_149841_5_, Random p_149841_6_, int p_149841_7_)
     {
-        int j1 = this.field_149848_b[Block.getIdFromBlock(p_149841_1_.getBlock(p_149841_2_, p_149841_3_, p_149841_4_))];
+        this.tryCatchFire(p_149841_1_, p_149841_2_, p_149841_3_, p_149841_4_, p_149841_5_, p_149841_6_, p_149841_7_, UP);
+    }
 
+    private void tryCatchFire(World p_149841_1_, int p_149841_2_, int p_149841_3_, int p_149841_4_, int p_149841_5_, Random p_149841_6_, int p_149841_7_, ForgeDirection face)
+    {
+        int j1 = p_149841_1_.getBlock(p_149841_2_, p_149841_3_, p_149841_4_).getFlammability(p_149841_1_, p_149841_2_, p_149841_3_, p_149841_4_, face);
+
         if (p_149841_6_.nextInt(p_149841_5_) < j1)
         {
             boolean flag = p_149841_1_.getBlock(p_149841_2_, p_149841_3_, p_149841_4_) == Blocks.tnt;
@@ -243,7 +251,12 @@
     // JAVADOC METHOD $$ func_149847_e
     private boolean canNeighborBurn(World p_149847_1_, int p_149847_2_, int p_149847_3_, int p_149847_4_)
     {
-        return this.canBlockCatchFire(p_149847_1_, p_149847_2_ + 1, p_149847_3_, p_149847_4_) ? true : (this.canBlockCatchFire(p_149847_1_, p_149847_2_ - 1, p_149847_3_, p_149847_4_) ? true : (this.canBlockCatchFire(p_149847_1_, p_149847_2_, p_149847_3_ - 1, p_149847_4_) ? true : (this.canBlockCatchFire(p_149847_1_, p_149847_2_, p_149847_3_ + 1, p_149847_4_) ? true : (this.canBlockCatchFire(p_149847_1_, p_149847_2_, p_149847_3_, p_149847_4_ - 1) ? true : this.canBlockCatchFire(p_149847_1_, p_149847_2_, p_149847_3_, p_149847_4_ + 1)))));
+        return this.canCatchFire(p_149847_1_, p_149847_2_ + 1, p_149847_3_, p_149847_4_, WEST ) ||
+               this.canCatchFire(p_149847_1_, p_149847_2_ - 1, p_149847_3_, p_149847_4_, EAST ) ||
+               this.canCatchFire(p_149847_1_, p_149847_2_, p_149847_3_ - 1, p_149847_4_, UP   ) ||
+               this.canCatchFire(p_149847_1_, p_149847_2_, p_149847_3_ + 1, p_149847_4_, DOWN ) ||
+               this.canCatchFire(p_149847_1_, p_149847_2_, p_149847_3_, p_149847_4_ - 1, SOUTH) ||
+               this.canCatchFire(p_149847_1_, p_149847_2_, p_149847_3_, p_149847_4_ + 1, NORTH);
     }
 
     // JAVADOC METHOD $$ func_149845_m
@@ -257,12 +270,13 @@
         }
         else
         {
-            int l = this.func_149846_a(p_149845_1_, p_149845_2_ + 1, p_149845_3_, p_149845_4_, b0);
-            l = this.func_149846_a(p_149845_1_, p_149845_2_ - 1, p_149845_3_, p_149845_4_, l);
-            l = this.func_149846_a(p_149845_1_, p_149845_2_, p_149845_3_ - 1, p_149845_4_, l);
-            l = this.func_149846_a(p_149845_1_, p_149845_2_, p_149845_3_ + 1, p_149845_4_, l);
-            l = this.func_149846_a(p_149845_1_, p_149845_2_, p_149845_3_, p_149845_4_ - 1, l);
-            l = this.func_149846_a(p_149845_1_, p_149845_2_, p_149845_3_, p_149845_4_ + 1, l);
+            int l = b0;
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_ + 1, p_149845_3_, p_149845_4_, l, WEST );
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_ - 1, p_149845_3_, p_149845_4_, l, EAST );
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_, p_149845_3_ - 1, p_149845_4_, l, UP   );
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_, p_149845_3_ + 1, p_149845_4_, l, DOWN );
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_, p_149845_3_, p_149845_4_ - 1, l, SOUTH);
+            l = this.getChanceToEncourageFire(p_149845_1_, p_149845_2_, p_149845_3_, p_149845_4_ + 1, l, NORTH);
             return l;
         }
     }
@@ -274,15 +288,16 @@
     }
 
     // JAVADOC METHOD $$ func_149844_e
+    @Deprecated
     public boolean canBlockCatchFire(IBlockAccess p_149844_1_, int p_149844_2_, int p_149844_3_, int p_149844_4_)
     {
-        return this.field_149849_a[Block.getIdFromBlock(p_149844_1_.getBlock(p_149844_2_, p_149844_3_, p_149844_4_))] > 0;
+        return canCatchFire(p_149844_1_, p_149844_2_, p_149844_3_, p_149844_4_, UP);
     }
 
+    @Deprecated
     public int func_149846_a(World p_149846_1_, int p_149846_2_, int p_149846_3_, int p_149846_4_, int p_149846_5_)
     {
-        int i1 = this.field_149849_a[Block.getIdFromBlock(p_149846_1_.getBlock(p_149846_2_, p_149846_3_, p_149846_4_))];
-        return i1 > p_149846_5_ ? i1 : p_149846_5_;
+        return getChanceToEncourageFire(p_149846_1_, p_149846_2_, p_149846_3_, p_149846_4_, p_149846_5_, UP);
     }
 
     // JAVADOC METHOD $$ func_149742_c
@@ -330,9 +345,9 @@
         float f1;
         float f2;
 
-        if (!World.doesBlockHaveSolidTopSurface(p_149734_1_, p_149734_2_, p_149734_3_ - 1, p_149734_4_) && !Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_, p_149734_3_ - 1, p_149734_4_))
+        if (!World.doesBlockHaveSolidTopSurface(p_149734_1_, p_149734_2_, p_149734_3_ - 1, p_149734_4_) && !Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_, p_149734_3_ - 1, p_149734_4_, UP))
         {
-            if (Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_ - 1, p_149734_3_, p_149734_4_))
+            if (Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_ - 1, p_149734_3_, p_149734_4_, EAST))
             {
                 for (l = 0; l < 2; ++l)
                 {
@@ -343,7 +358,7 @@
                 }
             }
 
-            if (Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_ + 1, p_149734_3_, p_149734_4_))
+            if (Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_ + 1, p_149734_3_, p_149734_4_, WEST))
             {
                 for (l = 0; l < 2; ++l)
                 {
@@ -354,7 +369,7 @@
                 }
             }
 
-            if (Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_, p_149734_3_, p_149734_4_ - 1))
+            if (Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_, p_149734_3_, p_149734_4_ - 1, SOUTH))
             {
                 for (l = 0; l < 2; ++l)
                 {
@@ -365,7 +380,7 @@
                 }
             }
 
-            if (Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_, p_149734_3_, p_149734_4_ + 1))
+            if (Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_, p_149734_3_, p_149734_4_ + 1, NORTH))
             {
                 for (l = 0; l < 2; ++l)
                 {
@@ -376,7 +391,7 @@
                 }
             }
 
-            if (Blocks.fire.canBlockCatchFire(p_149734_1_, p_149734_2_, p_149734_3_ + 1, p_149734_4_))
+            if (Blocks.fire.canCatchFire(p_149734_1_, p_149734_2_, p_149734_3_ + 1, p_149734_4_, DOWN))
             {
                 for (l = 0; l < 2; ++l)
                 {
@@ -422,4 +437,101 @@
     {
         return MapColor.tntColor;
     }
+
+    /*================================= Forge Start ======================================*/
+    private static class FireInfo
+    {
+        private int encouragement = 0;
+        private int flammibility = 0;
+    }
+    private IdentityHashMap<Block, FireInfo> blockInfo = Maps.newIdentityHashMap();
+
+    public void setFireInfo(Block block, int encouragement, int flammibility)
+    {
+        if (block == Blocks.air) throw new IllegalArgumentException("Tried to set air on fire... This is bad.");
+        int id = Block.getIdFromBlock(block);
+        this.field_149849_a[id] = encouragement;
+        this.field_149848_b[id] = flammibility;
+
+        FireInfo info = getInfo(block, true);
+        info.encouragement = encouragement;
+        info.flammibility = flammibility;
+    }
+
+    private FireInfo getInfo(Block block, boolean garentee)
+    {
+        FireInfo ret = blockInfo.get(block);
+        if (ret == null && garentee)
+        {
+            ret = new FireInfo();
+            blockInfo.put(block, ret);
+        }
+        return ret;
+    }
+
+    public void rebuildFireInfo()
+    {
+        for (int x = 0; x < 4096; x++)
+        {
+            //If we care.. we could detect changes in here and make sure we keep them, however 
+            //it's my thinking that anyone who hacks into the private variables should DIAF and we don't care about them.
+            field_149849_a[x] = 0;
+            field_149848_b[x] = 0;
+        }
+
+        for (Entry<Block, FireInfo> e : blockInfo.entrySet())
+        {
+            int id = Block.getIdFromBlock(e.getKey());
+            if (id >= 0 && id < 4096)
+            {
+                field_149849_a[id] = e.getValue().encouragement;
+                field_149848_b[id] = e.getValue().flammibility;
+            }
+        }
+    }
+
+    public int getFlammability(Block block)
+    {
+        int id = Block.getIdFromBlock(block);
+        return id >= 0 && id < 4096 ? field_149848_b[id] : 0;
+    }
+
+    public int getEncouragement(Block block)
+    {
+        int id = Block.getIdFromBlock(block);
+        return id >= 0 && id < 4096 ? field_149849_a[id] : 0;
+    }
+
+    /**
+     * Side sensitive version that calls the block function.
+     * 
+     * @param world The current world
+     * @param x X Position
+     * @param y Y Position
+     * @param z Z Position
+     * @param face The side the fire is coming from
+     * @return True if the face can catch fire.
+     */
+    public boolean canCatchFire(IBlockAccess world, int x, int y, int z, ForgeDirection face)
+    {
+        return world.getBlock(x, y, z).isFlammable(world, x, y, z, face);
+    }
+
+    /**
+     * Side sensitive version that calls the block function.
+     * 
+     * @param world The current world
+     * @param x X Position
+     * @param y Y Position
+     * @param z Z Position
+     * @param oldChance The previous maximum chance.
+     * @param face The side the fire is coming from
+     * @return The chance of the block catching fire, or oldChance if it is higher
+     */
+    public int getChanceToEncourageFire(IBlockAccess world, int x, int y, int z, int oldChance, ForgeDirection face)
+    {
+        int newChance = world.getBlock(x, y, z).getFireSpreadSpeed(world, x, y, z, face);
+        return (newChance > oldChance ? newChance : oldChance);
+    }
+    /*================================= Forge Start ======================================*/
 }
