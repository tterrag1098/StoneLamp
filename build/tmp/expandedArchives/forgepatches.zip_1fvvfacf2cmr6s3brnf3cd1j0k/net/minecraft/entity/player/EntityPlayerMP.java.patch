--- ../src-base/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
+++ ../src-work/minecraft/net/minecraft/entity/player/EntityPlayerMP.java
@@ -99,6 +99,12 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import net.minecraft.entity.item.EntityItem;
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.event.entity.player.PlayerDropsEvent;
+import net.minecraftforge.event.world.ChunkWatchEvent;
+
 public class EntityPlayerMP extends EntityPlayer implements ICrafting
 {
     private static final Logger logger = LogManager.getLogger();
@@ -148,19 +154,11 @@
         p_i45285_4_.thisPlayerMP = this;
         this.theItemInWorldManager = p_i45285_4_;
         this.renderDistance = p_i45285_1_.getConfigurationManager().getViewDistance();
-        ChunkCoordinates chunkcoordinates = p_i45285_2_.getSpawnPoint();
+        ChunkCoordinates chunkcoordinates = p_i45285_2_.provider.getRandomizedSpawnPoint();
         int i = chunkcoordinates.posX;
         int j = chunkcoordinates.posZ;
         int k = chunkcoordinates.posY;
 
-        if (!p_i45285_2_.provider.hasNoSky && p_i45285_2_.getWorldInfo().getGameType() != WorldSettings.GameType.ADVENTURE)
-        {
-            int l = Math.max(5, p_i45285_1_.getSpawnProtectionSize() - 6);
-            i += this.rand.nextInt(l * 2) - l;
-            j += this.rand.nextInt(l * 2) - l;
-            k = p_i45285_2_.getTopSolidOrLiquidBlock(i, j);
-        }
-
         this.mcServer = p_i45285_1_;
         this.field_147103_bO = p_i45285_1_.getConfigurationManager().func_148538_i(this.getCommandSenderName());
         this.stepHeight = 0.0F;
@@ -218,7 +216,7 @@
 
     public float getEyeHeight()
     {
-        return 1.62F;
+        return super.getEyeHeight();
     }
 
     // JAVADOC METHOD $$ func_70071_h_
@@ -234,7 +232,7 @@
 
         this.openContainer.detectAndSendChanges();
 
-        if (!this.worldObj.isRemote && !this.openContainer.canInteractWith(this))
+        if (!this.worldObj.isRemote && !ForgeHooks.canInteractWith(this, this.openContainer))
         {
             this.closeScreen();
             this.openContainer = this.inventoryContainer;
@@ -275,8 +273,9 @@
 
                         if (chunk.func_150802_k())
                         {
-                            arraylist.add(chunk);
-                            arraylist1.addAll(((WorldServer)this.worldObj).func_147486_a(chunkcoordintpair.chunkXPos * 16, 0, chunkcoordintpair.chunkZPos * 16, chunkcoordintpair.chunkXPos * 16 + 16, 256, chunkcoordintpair.chunkZPos * 16 + 16));
+                            arraylist.add(chunk);                            
+                            arraylist1.addAll(((WorldServer)this.worldObj).func_147486_a(chunkcoordintpair.chunkXPos * 16, 0, chunkcoordintpair.chunkZPos * 16, chunkcoordintpair.chunkXPos * 16 + 15, 256, chunkcoordintpair.chunkZPos * 16 + 16));
+                            //BugFix: 16 makes it load an extra chunk, which isn't associated with a player, which makes it not unload unless a player walks near it.
                             iterator1.remove();
                         }
                     }
@@ -304,6 +303,7 @@
                 {
                     chunk = (Chunk)iterator2.next();
                     this.getServerForPlayer().getEntityTracker().func_85172_a(this, chunk);
+                    MinecraftForge.EVENT_BUS.post(new ChunkWatchEvent.Watch(chunk.getChunkCoordIntPair(), this));
                 }
             }
         }
@@ -429,11 +429,25 @@
     // JAVADOC METHOD $$ func_70645_a
     public void onDeath(DamageSource par1DamageSource)
     {
+        if (ForgeHooks.onLivingDeath(this, par1DamageSource)) return;
         this.mcServer.getConfigurationManager().sendChatMsg(this.func_110142_aN().func_151521_b());
 
         if (!this.worldObj.getGameRules().getGameRuleBooleanValue("keepInventory"))
         {
+            captureDrops = true;
+            capturedDrops.clear();
+
             this.inventory.dropAllItems();
+
+            captureDrops = false;
+            PlayerDropsEvent event = new PlayerDropsEvent(this, par1DamageSource, capturedDrops, recentlyHit > 0);
+            if (!MinecraftForge.EVENT_BUS.post(event))
+            {
+                for (EntityItem item : capturedDrops)
+                {
+                    joinEntityItemWithWorld(item);
+                }
+            }
         }
 
         Collection collection = this.worldObj.getScoreboard().func_96520_a(IScoreObjectiveCriteria.deathCount);
@@ -1037,4 +1051,15 @@
     {
         return this.field_147103_bO;
     }
+
+    /* ===================================== FORGE START =====================================*/
+    /**
+     * Returns the default eye height of the player
+     * @return player default eye height
+     */
+    @Override
+    public float getDefaultEyeHeight()
+    {
+        return 1.62F;
+    }
 }
