--- ../src-base/minecraft/net/minecraft/world/biome/BiomeDecorator.java
+++ ../src-work/minecraft/net/minecraft/world/biome/BiomeDecorator.java
@@ -19,6 +19,11 @@
 import net.minecraft.world.gen.feature.WorldGenWaterlily;
 import net.minecraft.world.gen.feature.WorldGenerator;
 
+import static net.minecraftforge.event.terraingen.DecorateBiomeEvent.Decorate.EventType.*;
+import static net.minecraftforge.event.terraingen.OreGenEvent.GenerateMinable.EventType.*;
+import net.minecraftforge.common.*;
+import net.minecraftforge.event.terraingen.*;
+
 public class BiomeDecorator
 {
     // JAVADOC FIELD $$ field_76815_a
@@ -136,26 +141,30 @@
 
     protected void genDecorations(BiomeGenBase p_150513_1_)
     {
+        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Pre(currentWorld, randomGenerator, chunk_X, chunk_Z));
         this.generateOres();
         int i;
         int j;
         int k;
 
-        for (i = 0; i < this.sandPerChunk2; ++i)
+        boolean doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, SAND);
+        for (i = 0; doGen && i < this.sandPerChunk2; ++i)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
             this.sandGen.generate(this.currentWorld, this.randomGenerator, j, this.currentWorld.getTopSolidOrLiquidBlock(j, k), k);
         }
 
-        for (i = 0; i < this.clayPerChunk; ++i)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, CLAY);
+        for (i = 0; doGen && i < this.clayPerChunk; ++i)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
             this.clayGen.generate(this.currentWorld, this.randomGenerator, j, this.currentWorld.getTopSolidOrLiquidBlock(j, k), k);
         }
 
-        for (i = 0; i < this.sandPerChunk; ++i)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, SAND_PASS2);
+        for (i = 0; doGen && i < this.sandPerChunk; ++i)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -172,7 +181,8 @@
         int l;
         int i1;
 
-        for (j = 0; j < i; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, TREE);
+        for (j = 0; doGen && j < i; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -186,14 +196,16 @@
             }
         }
 
-        for (j = 0; j < this.bigMushroomsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, BIG_SHROOM);
+        for (j = 0; doGen && j < this.bigMushroomsPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
             this.bigMushroomGen.generate(this.currentWorld, this.randomGenerator, k, this.currentWorld.getHeightValue(k, l), l);
         }
 
-        for (j = 0; j < this.flowersPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, FLOWERS);
+        for (j = 0; doGen && j < this.flowersPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -208,7 +220,8 @@
             }
         }
 
-        for (j = 0; j < this.grassPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, GRASS);
+        for (j = 0; doGen && j < this.grassPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -217,7 +230,8 @@
             worldgenerator.generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        for (j = 0; j < this.deadBushPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, DEAD_BUSH);
+        for (j = 0; doGen && j < this.deadBushPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -225,7 +239,8 @@
             (new WorldGenDeadBush(Blocks.deadbush)).generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        for (j = 0; j < this.waterlilyPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, LILYPAD);
+        for (j = 0; doGen && j < this.waterlilyPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -238,7 +253,8 @@
             this.waterlilyGen.generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        for (j = 0; j < this.mushroomsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, SHROOM);
+        for (j = 0; doGen && j < this.mushroomsPerChunk; ++j)
         {
             if (this.randomGenerator.nextInt(4) == 0)
             {
@@ -257,7 +273,7 @@
             }
         }
 
-        if (this.randomGenerator.nextInt(4) == 0)
+        if (doGen && this.randomGenerator.nextInt(4) == 0)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -265,7 +281,7 @@
             this.mushroomBrownGen.generate(this.currentWorld, this.randomGenerator, j, l, k);
         }
 
-        if (this.randomGenerator.nextInt(8) == 0)
+        if (doGen && this.randomGenerator.nextInt(8) == 0)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -273,7 +289,8 @@
             this.mushroomRedGen.generate(this.currentWorld, this.randomGenerator, j, l, k);
         }
 
-        for (j = 0; j < this.reedsPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, REED);
+        for (j = 0; doGen && j < this.reedsPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -281,7 +298,7 @@
             this.reedGen.generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        for (j = 0; j < 10; ++j)
+        for (j = 0; doGen && j < 10; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -289,7 +306,8 @@
             this.reedGen.generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        if (this.randomGenerator.nextInt(32) == 0)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, PUMPKIN);
+        if (doGen && this.randomGenerator.nextInt(32) == 0)
         {
             j = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             k = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -297,7 +315,8 @@
             (new WorldGenPumpkin()).generate(this.currentWorld, this.randomGenerator, j, l, k);
         }
 
-        for (j = 0; j < this.cactiPerChunk; ++j)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, CACTUS);
+        for (j = 0; doGen && j < this.cactiPerChunk; ++j)
         {
             k = this.chunk_X + this.randomGenerator.nextInt(16) + 8;
             l = this.chunk_Z + this.randomGenerator.nextInt(16) + 8;
@@ -305,7 +324,8 @@
             this.cactusGen.generate(this.currentWorld, this.randomGenerator, k, i1, l);
         }
 
-        if (this.generateLakes)
+        doGen = TerrainGen.decorate(currentWorld, randomGenerator, chunk_X, chunk_Z, LAKE);
+        if (doGen && this.generateLakes)
         {
             for (j = 0; j < 50; ++j)
             {
@@ -323,6 +343,8 @@
                 (new WorldGenLiquids(Blocks.flowing_lava)).generate(this.currentWorld, this.randomGenerator, k, l, i1);
             }
         }
+
+        MinecraftForge.EVENT_BUS.post(new DecorateBiomeEvent.Post(currentWorld, randomGenerator, chunk_X, chunk_Z));
     }
 
     // JAVADOC METHOD $$ func_76795_a
@@ -352,13 +374,23 @@
     // JAVADOC METHOD $$ func_76797_b
     protected void generateOres()
     {
+        MinecraftForge.ORE_GEN_BUS.post(new OreGenEvent.Pre(currentWorld, randomGenerator, chunk_X, chunk_Z));
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, dirtGen, chunk_X, chunk_Z, DIRT))
         this.genStandardOre1(20, this.dirtGen, 0, 256);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, gravelGen, chunk_X, chunk_Z, GRAVEL))
         this.genStandardOre1(10, this.gravelGen, 0, 256);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, coalGen, chunk_X, chunk_Z, COAL))
         this.genStandardOre1(20, this.coalGen, 0, 128);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, ironGen, chunk_X, chunk_Z, IRON))
         this.genStandardOre1(20, this.ironGen, 0, 64);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, goldGen, chunk_X, chunk_Z, GOLD))
         this.genStandardOre1(2, this.goldGen, 0, 32);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, redstoneGen, chunk_X, chunk_Z, REDSTONE))
         this.genStandardOre1(8, this.redstoneGen, 0, 16);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, diamondGen, chunk_X, chunk_Z, DIAMOND))
         this.genStandardOre1(1, this.diamondGen, 0, 16);
+        if (TerrainGen.generateOre(currentWorld, randomGenerator, lapisGen, chunk_X, chunk_Z, LAPIS))
         this.genStandardOre2(1, this.lapisGen, 16, 16);
+        MinecraftForge.ORE_GEN_BUS.post(new OreGenEvent.Post(currentWorld, randomGenerator, chunk_X, chunk_Z));
     }
 }
