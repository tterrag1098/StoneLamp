--- ../src-base/minecraft/net/minecraft/world/gen/ChunkProviderGenerate.java
+++ ../src-work/minecraft/net/minecraft/world/gen/ChunkProviderGenerate.java
@@ -22,6 +22,12 @@
 import net.minecraft.world.gen.structure.MapGenStronghold;
 import net.minecraft.world.gen.structure.MapGenVillage;
 
+import static net.minecraftforge.event.terraingen.InitMapGenEvent.EventType.*;
+import static net.minecraftforge.event.terraingen.PopulateChunkEvent.Populate.EventType.*;
+import net.minecraftforge.common.*;
+import cpw.mods.fml.common.eventhandler.Event.*;
+import net.minecraftforge.event.terraingen.*;
+
 public class ChunkProviderGenerate implements IChunkProvider
 {
     // JAVADOC FIELD $$ field_73220_k
@@ -62,6 +68,15 @@
     int[][] field_73219_j = new int[32][32];
     private static final String __OBFID = "CL_00000396";
 
+    {
+        caveGenerator = TerrainGen.getModdedMapGen(caveGenerator, CAVE);
+        strongholdGenerator = (MapGenStronghold) TerrainGen.getModdedMapGen(strongholdGenerator, STRONGHOLD);
+        villageGenerator = (MapGenVillage) TerrainGen.getModdedMapGen(villageGenerator, VILLAGE);
+        mineshaftGenerator = (MapGenMineshaft) TerrainGen.getModdedMapGen(mineshaftGenerator, MINESHAFT);
+        scatteredFeatureGenerator = (MapGenScatteredFeature) TerrainGen.getModdedMapGen(scatteredFeatureGenerator, SCATTERED_FEATURE);
+        ravineGenerator = TerrainGen.getModdedMapGen(ravineGenerator, RAVINE);
+    }    
+
     public ChunkProviderGenerate(World par1World, long par2, boolean par4)
     {
         this.worldObj = par1World;
@@ -86,6 +101,16 @@
                 this.parabolicField[j + 2 + (k + 2) * 5] = f;
             }
         }
+
+        NoiseGenerator[] noiseGens = {field_147431_j, field_147432_k, field_147429_l, field_147430_m, noiseGen5, noiseGen6, mobSpawnerNoise};
+        noiseGens = TerrainGen.getModdedNoiseGenerators(par1World, this.rand, noiseGens);
+        this.field_147431_j = (NoiseGeneratorOctaves)noiseGens[0];
+        this.field_147432_k = (NoiseGeneratorOctaves)noiseGens[1];
+        this.field_147429_l = (NoiseGeneratorOctaves)noiseGens[2];
+        this.field_147430_m = (NoiseGeneratorPerlin)noiseGens[3];
+        this.noiseGen5 = (NoiseGeneratorOctaves)noiseGens[4];
+        this.noiseGen6 = (NoiseGeneratorOctaves)noiseGens[5];
+        this.mobSpawnerNoise = (NoiseGeneratorOctaves)noiseGens[6];
     }
 
     public void func_147424_a(int p_147424_1_, int p_147424_2_, Block[] p_147424_3_)
@@ -167,6 +192,10 @@
 
     public void replaceBlocksForBiome(int p_147422_1_, int p_147422_2_, Block[] p_147422_3_, byte[] p_147422_4_, BiomeGenBase[] p_147422_5_)
     {
+        ChunkProviderEvent.ReplaceBiomeBlocks event = new ChunkProviderEvent.ReplaceBiomeBlocks(this, p_147422_1_, p_147422_2_, p_147422_3_, p_147422_5_);
+        MinecraftForge.EVENT_BUS.post(event);
+        if (event.getResult() == Result.DENY) return;
+
         double d0 = 0.03125D;
         this.stoneNoise = this.field_147430_m.func_151599_a(this.stoneNoise, (double)(p_147422_1_ * 16), (double)(p_147422_2_ * 16), 16, 16, d0 * 2.0D, d0 * 2.0D, 1.0D);
 
@@ -359,6 +388,8 @@
         this.rand.setSeed((long)par2 * i1 + (long)par3 * j1 ^ this.worldObj.getSeed());
         boolean flag = false;
 
+        MinecraftForge.EVENT_BUS.post(new PopulateChunkEvent.Pre(par1IChunkProvider, worldObj, rand, par2, par3, flag));
+
         if (this.mapFeaturesEnabled)
         {
             this.mineshaftGenerator.generateStructuresInChunk(this.worldObj, this.rand, par2, par3);
@@ -371,7 +402,8 @@
         int l1;
         int i2;
 
-        if (biomegenbase != BiomeGenBase.desert && biomegenbase != BiomeGenBase.desertHills && !flag && this.rand.nextInt(4) == 0)
+        if (biomegenbase != BiomeGenBase.desert && biomegenbase != BiomeGenBase.desertHills && !flag && this.rand.nextInt(4) == 0
+            && TerrainGen.populate(par1IChunkProvider, worldObj, rand, par2, par3, flag, LAKE))
         {
             k1 = k + this.rand.nextInt(16) + 8;
             l1 = this.rand.nextInt(256);
@@ -379,7 +411,7 @@
             (new WorldGenLakes(Blocks.water)).generate(this.worldObj, this.rand, k1, l1, i2);
         }
 
-        if (!flag && this.rand.nextInt(8) == 0)
+        if (TerrainGen.populate(par1IChunkProvider, worldObj, rand, par2, par3, flag, LAVA) && !flag && this.rand.nextInt(8) == 0)
         {
             k1 = k + this.rand.nextInt(16) + 8;
             l1 = this.rand.nextInt(this.rand.nextInt(248) + 8);
@@ -391,7 +423,8 @@
             }
         }
 
-        for (k1 = 0; k1 < 8; ++k1)
+        boolean doGen = TerrainGen.populate(par1IChunkProvider, worldObj, rand, par2, par3, flag, DUNGEON);
+        for (k1 = 0; doGen && k1 < 8; ++k1)
         {
             l1 = k + this.rand.nextInt(16) + 8;
             i2 = this.rand.nextInt(256);
@@ -404,7 +437,8 @@
         k += 8;
         l += 8;
 
-        for (k1 = 0; k1 < 16; ++k1)
+        doGen = TerrainGen.populate(par1IChunkProvider, worldObj, rand, par2, par3, flag, ICE);
+        for (k1 = 0; doGen && k1 < 16; ++k1)
         {
             for (l1 = 0; l1 < 16; ++l1)
             {
@@ -422,6 +456,8 @@
             }
         }
 
+        MinecraftForge.EVENT_BUS.post(new PopulateChunkEvent.Post(par1IChunkProvider, worldObj, rand, par2, par3, flag));
+
         BlockFalling.fallInstantly = false;
     }
 
