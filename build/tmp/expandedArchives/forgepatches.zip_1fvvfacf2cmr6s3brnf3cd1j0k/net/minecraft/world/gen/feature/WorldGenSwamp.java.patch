--- ../src-base/minecraft/net/minecraft/world/gen/feature/WorldGenSwamp.java
+++ ../src-work/minecraft/net/minecraft/world/gen/feature/WorldGenSwamp.java
@@ -2,9 +2,11 @@
 
 import java.util.Random;
 import net.minecraft.block.Block;
+import net.minecraft.block.BlockSapling;
 import net.minecraft.block.material.Material;
 import net.minecraft.init.Blocks;
 import net.minecraft.world.World;
+import net.minecraftforge.common.util.ForgeDirection;
 
 public class WorldGenSwamp extends WorldGenAbstractTree
 {
@@ -53,7 +55,7 @@
                         {
                             Block block = par1World.getBlock(j1, i1, k1);
 
-                            if (block.getMaterial() != Material.air && block.getMaterial() != Material.leaves)
+                            if (!(block.isAir(par1World, j1, i1, k1) || block.isLeaves(par1World, j1, i1, k1)))
                             {
                                 if (block != Blocks.water && block != Blocks.flowing_water)
                                 {
@@ -81,9 +83,10 @@
             {
                 Block block1 = par1World.getBlock(par3, par4 - 1, par5);
 
-                if ((block1 == Blocks.grass || block1 == Blocks.dirt) && par4 < 256 - l - 1)
+                boolean isSoil = block1.canSustainPlant(par1World, par3, par4 - 1, par5, ForgeDirection.UP, (BlockSapling)Blocks.sapling);
+                if (isSoil && par4 < 256 - l - 1)
                 {
-                    this.func_150515_a(par1World, par3, par4 - 1, par5, Blocks.dirt);
+                    block1.onPlantGrow(par1World, par3, par4 - 1, par5, par3, par4, par5);
                     int l1;
                     int l2;
                     int k2;
@@ -101,7 +104,7 @@
                             {
                                 int j2 = i2 - par5;
 
-                                if ((Math.abs(l1) != k1 || Math.abs(j2) != k1 || par2Random.nextInt(2) != 0 && j1 != 0) && !par1World.getBlock(l2, k2, i2).func_149730_j())
+                                if ((Math.abs(l1) != k1 || Math.abs(j2) != k1 || par2Random.nextInt(2) != 0 && j1 != 0) && par1World.getBlock(l2, k2, i2).canBeReplacedByLeaves(par1World, l2, k2, i2))
                                 {
                                     this.func_150515_a(par1World, l2, k2, i2, Blocks.leaves);
                                 }
@@ -113,7 +116,7 @@
                     {
                         Block block2 = par1World.getBlock(par3, par4 + k2, par5);
 
-                        if (block2.getMaterial() == Material.air || block2.getMaterial() == Material.leaves || block2 == Blocks.flowing_water || block2 == Blocks.water)
+                        if (block2.isAir(par1World, par3, par4 + k2, par5) || block2.isLeaves(par1World, par3, par4 + k2, par5) || block2 == Blocks.flowing_water || block2 == Blocks.water)
                         {
                             this.func_150515_a(par1World, par3, par4 + k2, par5, Blocks.log);
                         }
@@ -128,24 +131,24 @@
                         {
                             for (l1 = par5 - k1; l1 <= par5 + k1; ++l1)
                             {
-                                if (par1World.getBlock(l2, k2, l1).getMaterial() == Material.leaves)
+                                if (par1World.getBlock(l2, k2, l1).isLeaves(par1World, l2, k2, l1))
                                 {
-                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2 - 1, k2, l1).getMaterial() == Material.air)
+                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2 - 1, k2, l1).isAir(par1World, l2 - 1, k2, l1))
                                     {
                                         this.generateVines(par1World, l2 - 1, k2, l1, 8);
                                     }
 
-                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2 + 1, k2, l1).getMaterial() == Material.air)
+                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2 + 1, k2, l1).isAir(par1World, l2 + 1, k2, l1))
                                     {
                                         this.generateVines(par1World, l2 + 1, k2, l1, 2);
                                     }
 
-                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2, k2, l1 - 1).getMaterial() == Material.air)
+                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2, k2, l1 - 1).isAir(par1World, l2, k2, l1 - 1))
                                     {
                                         this.generateVines(par1World, l2, k2, l1 - 1, 1);
                                     }
 
-                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2, k2, l1 + 1).getMaterial() == Material.air)
+                                    if (par2Random.nextInt(4) == 0 && par1World.getBlock(l2, k2, l1 + 1).isAir(par1World, l2, k2, l1 + 1))
                                     {
                                         this.generateVines(par1World, l2, k2, l1 + 1, 4);
                                     }
@@ -178,7 +181,7 @@
         {
             --par3;
 
-            if (par1World.getBlock(par2, par3, par4).getMaterial() != Material.air || i1 <= 0)
+            if (!(par1World.getBlock(par2, par3, par4).isAir(par1World, par2, par3, par4)) || i1 <= 0)
             {
                 return;
             }
